package com.raelity.jvi.fs;

import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author user
 */
public class SupportedFiles {

	private static FileNameExtensionFilter[] accepted = {
		new FileNameExtensionFilter("Assembly", "as", "asm"),
		new FileNameExtensionFilter("C Source", "c", "h"),
		new FileNameExtensionFilter("Clojure",
		"clj",
		"cljs",
		"cljr",
		"cljc",
		"cljd",
		"edn"),
		new FileNameExtensionFilter("C++ Source",
		"C",
		"cc",
		"cpp",
		"cxx",
		"c++",
		"H",
		"hh",
		"hpp",
		"hpp",
		"hxx",
		"h++",
		"cppm",
		"ixx"),
		new FileNameExtensionFilter("C# Source",
		"cs",
		"csx"),
		new FileNameExtensionFilter("CSS Source",
		"css"),
		new FileNameExtensionFilter("FORTRAN Source",
		"f90",
		"f",
		"for"),
		new FileNameExtensionFilter("Groovy Source",
		"groovy",
		"gvy",
		"gy",
		"gsh"),
		new FileNameExtensionFilter("HTML Source",
		"html",
		"htm"),
		new FileNameExtensionFilter("Java Source",
		"java"),
		new FileNameExtensionFilter("JavaScript Source",
		"js",
		"cjs",
		"mjs",
		"jsx",
		"json"),
		new FileNameExtensionFilter("JSP Source",
		"jsp",
		"jspx",
		"jspf"),
		new FileNameExtensionFilter("Latex Source",
		"latex",
		"tex"),
		new FileNameExtensionFilter("Lisp Source",
		"lisp",
		"lsp",
		"l",
		"cl",
		"fasl"),
		new FileNameExtensionFilter("Lua Source",
		"lua"),
		new FileNameExtensionFilter("Makefile",
		"Makefile"),
		new FileNameExtensionFilter("Pearl Source",
		"plx",
		"pls",
		"pl",
		"pm",
		"xs",
		"t",
		"pod",
		"cgi",
		"psgi"),
		new FileNameExtensionFilter("PHP Source",
		"php",
		"phar",
		"phtml",
		"pht",
		"phps"),
		new FileNameExtensionFilter("Properties",
		"properties"),
		new FileNameExtensionFilter("Python Source",
		"py",
		"pyw",
		"pyz",
		"pyi",
		"pyc",
		"pyd"),
		new FileNameExtensionFilter("Ruby Source",
		"rb",
		"ru"),
		new FileNameExtensionFilter("SASS Source",
		"sass",
		"scss"),
		new FileNameExtensionFilter("Scala Source",
		"scala",
		"sc"),
		new FileNameExtensionFilter("Sql Source",
		"sql"),
		new FileNameExtensionFilter("Tikle Source",
		"tcl",
		"tcb"),
		new FileNameExtensionFilter("Bash",
		"bash",
		"sh"),
		new FileNameExtensionFilter("Batch",
		"bat",
		"cmd",
		"btm"),
		new FileNameExtensionFilter("XML Source",
		"xml"),
		new FileNameExtensionFilter("Golang Source",
		"go"),
		new FileNameExtensionFilter("Rust Source",
		"rs",
		"rlib"),
		new FileNameExtensionFilter("Typescript Source",
		"ts",
		"tsx",
		"mts",
		"cts")
	};

	public static void setAcceptedFiles(JFileChooser fc) {
		Stream.of(accepted).sorted((left, right) -> {
			return left.getDescription().compareTo(right.getDescription());
		})
			.forEach(filter -> {
				fc.addChoosableFileFilter(filter);
			}
			);
	}
}
